# 端口
server:
  port: ${port:9999}

# 服务名称、邮件配置、微服务配置、Redis配置
spring:
  # 切换环境：dev(开发环境)、test(测试环境)、prod(生产环境，目前不需要)
  profiles:
    active: dev
  application:
    name: gateway-server
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    sentinel:
      filter:
        # 开启/关闭对spring mav端点的保护
        enabled: true
      transport:
        dashboard: localhost:8718
      eager: true
    gateway:    #配置SpringCloud GateWay相关属性
      discovery:    #配置网关发现机制
        locator:    #配置本地化配置机制
          enabled: true    #开启从注册中心动态创建路由的功能，利用微服务名进行路由
          lower-case-service-id: true   #配置服务名大小写自动转换
      routes:   #配置网关中的一个完整路由网关，包括路由ID、URL地址、断言、过滤器
        #User
        - id: user    #用户路由ID（唯一即可）,命名规则参考Java
          #动态路由获取 URL，lb 代表负载均衡，分流维度一
          uri: lb://user
          #断言 (GatewayPredicate)
          predicates:
            #1. Path路由规则：根据路径匹配
            - Path=/user/**   #定义一个谓词。格式：谓词名称=参数 或者 name:名称 args:参数
            #2. Query路由规则：参数一表示必须带有“token”参数，参数二为正则表达式，表示参数值必须包含“abc...”数据
            #- Query=token, abc.
            #3. Method路由规格：匹配任意 GET 请求
            #- Method=GET
            #4. 匹配中国上海时间 2022-06-20 20:20:20 之后的请求，其他的 Datetime 断言为：Before、Between
            #- After=2022-06-20T20:20:20.000+08:00[Asia/Shanghai]
            #5. 匹配请求头必须包含 User-Z 并且其值匹配正则表达式 \d+(非负数) 的请求
            #- Header=User-Z, \d+
            #6. 带指定 Cookie POST请求，参数 username 表示键，参数 zzz 表示值，可以用终端命令：curl http://locahost:9999/user/user/xxx --cookie "username=zzz" 来模拟POST请求
            #- Cookie=username,zzz
          #网关过滤器 (GatewayFilter)
          filters:
            #将 /微服务名称(user)/controller名称(user)/方法名(test2) 重写为 /user/test2 ，参数表示切割几段
            - StripPrefix=1
            #参数过滤器：给下游请求中携带参数 flag=1
            #- AddRequestParameter=flag, 1
            #设置任何状态下，响应的 HTTP 状态码都为 404
            #- SetStatus=404
            #设置限流，令牌桶算法，分流维度二
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@myKeyResolver}'    #从Spring容器中找对象 #{@beanName}
                redis-rate-limiter.replenishRate: 10    #发放令牌数量每秒
                redis-rate-limiter.burstCapacity: 20    #令牌桶容量
  redis:
    host: localhost     #Redis服务器地址
    port: 6379          #Redis服务端口
    timeout: 3000ms     #连接超时时间
    password: 123456    #Redis服务密码

# 端点配置
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    enabled-by-default: true
    web:
      base-path: /actuator
      exposure:
        include: '*'
